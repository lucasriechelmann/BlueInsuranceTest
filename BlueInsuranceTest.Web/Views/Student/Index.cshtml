@model BlueInsuranceTest.Domain.Utils.PaginatedList<BlueInsuranceTest.Domain.Entities.Student>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mb-3">
    <h1 class="col-sm-8">Student</h1>
    <form asp-action="Index" asp-controller="Student" method="get" class="col-sm-4">
        <div class="input-group mb-3">
            <input type="text" name="search" class="form-control" placeholder="First Name, Surname" aria-label="First Name, Surname" aria-describedby="search-course">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">Search</button>
            </div>
        </div>
    </form>
    <a asp-action="Create" class="btn btn-primary btn-lg col-sm-2 offset-sm-10">New</a>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Surname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].DateOfBirth)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" })
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                    @Html.ActionLink("Courses", "Index", "StudentCourse", new { id = item.Id }, new { @class = "btn btn-" })
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-search="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-search="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
